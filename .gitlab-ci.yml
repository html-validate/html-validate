image: node:10

stages:
  - prepare
  - build
  - test
  - compatibility
  - release
  - postrelease

NPM:
  stage: prepare
  artifacts:
    name: ${CI_PROJECT_PATH_SLUG}-${CI_PIPELINE_ID}-npm
    paths:
      - node_modules/
  script:
    - node --version
    - npm --version
    - npm ci

Build:
  stage: build
  artifacts:
    name: ${CI_PROJECT_PATH_SLUG}-${CI_PIPELINE_ID}-build
    paths:
      - build/
  script:
    - npm run build

pages:
  stage: build
  artifacts:
    paths:
      - public
  only:
    - tags
    - triggers
  script:
    - npm run build
    - node_modules/.bin/grunt docs

ESLint:
  stage: test
  variables:
    ESLINT_STRICT: 1
  script:
    - node_modules/.bin/grunt eslint

Jest:
  stage: test
  script: node_modules/.bin/jest src elements
  coverage: /Lines\s+:\s(\d+.\d+%)/
  artifacts:
    name: ${CI_PROJECT_PATH_SLUG}-${CI_PIPELINE_ID}-coverage
    paths:
      - coverage
    reports:
      junit: temp/jest.xml

TSLint:
  stage: test
  script:
    - node_modules/.bin/grunt tslint

Prettier:
  stage: test
  script:
    - npm run prettier:check

Docs:
  stage: test
  script:
    - npm run build
    - node_modules/.bin/grunt docs
    - ./bin/html-validate.js docs/**/*.html public/**/.html
    - node_modules/.bin/jest docs
    - git status --porcelain
    - test -z "$(git status --porcelain)" || (echo 'working copy dirty, need to commit updated specs'; exit 1)
  artifacts:
    reports:
      junit: temp/jest.xml

.compat: &compat
  stage: compatibility
  dependencies: []
  before_script:
    - npm ci
  script:
    - npm test
    - npm run build

Node 8.x (LTS):
  <<: *compat
  image: node:8
  before_script:
    - npm install

Node 10.x (LTS):
  <<: *compat
  image: node:10

Node 12.x (current):
  <<: *compat
  image: node:12

Publish to NPM:
  stage: release
  only:
    - tags
  script:
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc
    - export PKG_VERSION=v$(node -p "require('./package.json').version")
    - echo ${CI_COMMIT_TAG}
    - echo ${PKG_VERSION}
    - test ${CI_COMMIT_TAG} = ${PKG_VERSION}
    - npm publish

.downstream: &downstream
  stage: postrelease
  only:
    - tags
  dependencies: []
  before_script:
    - sleep 10

grunt-html-validate:
  <<: *downstream
  variables:
    PROJECT_ID: 10926528
  script:
    - scripts/trigger-downstream "${PROJECT_ID}" "${DOWNSTREAM_GRUNT_TOKEN}" "master" "${CI_COMMIT_TAG}"

html-validate-angular:
  <<: *downstream
  variables:
    PROJECT_ID: 10598170
  script:
    - scripts/trigger-downstream "${PROJECT_ID}" "${DOWNSTREAM_ANGULAR_TOKEN}" "master" "${CI_COMMIT_TAG}"

html-validate-vue:
  <<: *downstream
  variables:
    PROJECT_ID: 10926311
  script:
    - scripts/trigger-downstream "${PROJECT_ID}" "${DOWNSTREAM_VUE_TOKEN}" "master" "${CI_COMMIT_TAG}"

protractor-html-validate:
  <<: *downstream
  variables:
    PROJECT_ID: 10443680
  script:
    - scripts/trigger-downstream "${PROJECT_ID}" "${DOWNSTREAM_PROTRACTOR_TOKEN}" "master" "${CI_COMMIT_TAG}"
