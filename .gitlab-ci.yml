image: node:9

stages:
  - prepare
  - build
  - test
  - release

NPM:
  stage: prepare
  cache:
    key: "${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    paths:
    - node_modules/
  artifacts:
    name: ${CI_PROJECT_PATH_SLUG}-${CI_PIPELINE_ID}-npm
    paths:
      - node_modules/
  script:
    - node --version
    - npm --version
    - npm install
    - npm ls || true

Build:
  stage: build
  artifacts:
    name: ${CI_PROJECT_PATH_SLUG}-${CI_PIPELINE_ID}-build
    paths:
      - build/
  script:
    - node_modules/.bin/grunt build:ci

pages:
  stage: build
  script: node_modules/.bin/grunt docs
  artifacts:
    paths:
      - public
  only:
    - tags
    - triggers

ESLint:
  stage: test
  variables:
    ESLINT_STRICT: 1
  script:
    - node_modules/.bin/grunt eslint

Mocha:
  stage: test
  script: npm run mocha
  coverage: /Lines\s+:\s(\d+.\d+%)/
  artifacts:
    name: ${CI_PROJECT_PATH_SLUG}-${CI_PIPELINE_ID}-coverage
    paths:
      - coverage

Smoketest:
  stage: test
  script:
    - node_modules/.bin/grunt smoketest

Docs:
  stage: test
  script:
    - node_modules/.bin/grunt ts docs
    - ./bin/html-validate.js docs/**/*.html public/**/.html

Publish to NPM:
  stage: release
  only:
    - tags
    - triggers
  script:
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc
    - export PKG_VERSION=v$(node -p "require('./package.json').version")
    - echo ${CI_COMMIT_TAG}
    - echo ${PKG_VERSION}
    - test ${CI_COMMIT_TAG} = ${PKG_VERSION}
    - npm publish
