async function update() {
	const fs = require("node:fs/promises");
	const { JSDOM } = require("jsdom");
	const url = "https://www.w3.org/TR/wai-aria/#namefromprohibited";
	/* eslint-disable-next-line n/no-unsupported-features/node-builtins -- this is not directly exposed to users, it is available from node 18 and onwads */
	const response = await fetch(url);
	if (!response.ok) {
		throw new Error(`Failed to fetch "${url}": HTTP ${response.status}: ${response.statusText}`);
	}
	const html = await response.text();
	const { document } = new JSDOM(html).window;
	const nameFromProhibited = Array.from(
		document.querySelectorAll("#namefromprohibited code"),
		(it) => it.textContent,
	);
	const roles = Array.from(document.querySelectorAll("#role_definitions .role"), (it) => it.id);
	const data = roles.map((it) => ({
		role: it,
		naming: nameFromProhibited.includes(it) ? "prohibited" : "allowed",
	}));
	const serialized = JSON.stringify(data, null, "\t")
		.replace(/"([^"]+)":/g, "$1:") /* replace `"key":` with `key:` */
		.replace(/(\s+)}/gm, ",$1}") /* add trailing comma to objects */
		.replace(/(\s+)]/gm, ",$1]"); /* add trailing comma to arrays */
	const content = [
		update.toString(),
		`if (require.main === module) {\n\tupdate();\n}`,
		`/* CONTENT BELOW IS GENERATED BY SCRIPT, CHANGES WILL BE OVERWRITTEN! */\n/* Updated: ${new Date()} */`,
		`const data = ${serialized};`,
		`module.exports = data;`,
	].join("\n\n");
	await fs.writeFile(__filename, `${content}\n`, "utf-8");
}

if (require.main === module) {
	update();
}

/* CONTENT BELOW IS GENERATED BY SCRIPT, CHANGES WILL BE OVERWRITTEN! */
/* Updated: Sun Feb 18 2024 14:25:33 GMT+0100 (GMT+01:00) */

const data = [
	{
		role: "alert",
		naming: "allowed",
	},
	{
		role: "alertdialog",
		naming: "allowed",
	},
	{
		role: "application",
		naming: "allowed",
	},
	{
		role: "article",
		naming: "allowed",
	},
	{
		role: "banner",
		naming: "allowed",
	},
	{
		role: "blockquote",
		naming: "allowed",
	},
	{
		role: "button",
		naming: "allowed",
	},
	{
		role: "caption",
		naming: "prohibited",
	},
	{
		role: "cell",
		naming: "allowed",
	},
	{
		role: "checkbox",
		naming: "allowed",
	},
	{
		role: "code",
		naming: "prohibited",
	},
	{
		role: "columnheader",
		naming: "allowed",
	},
	{
		role: "combobox",
		naming: "allowed",
	},
	{
		role: "command",
		naming: "allowed",
	},
	{
		role: "complementary",
		naming: "allowed",
	},
	{
		role: "composite",
		naming: "allowed",
	},
	{
		role: "contentinfo",
		naming: "allowed",
	},
	{
		role: "definition",
		naming: "allowed",
	},
	{
		role: "deletion",
		naming: "prohibited",
	},
	{
		role: "dialog",
		naming: "allowed",
	},
	{
		role: "directory",
		naming: "allowed",
	},
	{
		role: "document",
		naming: "allowed",
	},
	{
		role: "emphasis",
		naming: "prohibited",
	},
	{
		role: "feed",
		naming: "allowed",
	},
	{
		role: "figure",
		naming: "allowed",
	},
	{
		role: "form",
		naming: "allowed",
	},
	{
		role: "generic",
		naming: "prohibited",
	},
	{
		role: "grid",
		naming: "allowed",
	},
	{
		role: "gridcell",
		naming: "allowed",
	},
	{
		role: "group",
		naming: "allowed",
	},
	{
		role: "heading",
		naming: "allowed",
	},
	{
		role: "img",
		naming: "allowed",
	},
	{
		role: "input",
		naming: "allowed",
	},
	{
		role: "insertion",
		naming: "prohibited",
	},
	{
		role: "landmark",
		naming: "allowed",
	},
	{
		role: "link",
		naming: "allowed",
	},
	{
		role: "list",
		naming: "allowed",
	},
	{
		role: "listbox",
		naming: "allowed",
	},
	{
		role: "listitem",
		naming: "allowed",
	},
	{
		role: "log",
		naming: "allowed",
	},
	{
		role: "main",
		naming: "allowed",
	},
	{
		role: "marquee",
		naming: "allowed",
	},
	{
		role: "math",
		naming: "allowed",
	},
	{
		role: "meter",
		naming: "allowed",
	},
	{
		role: "menu",
		naming: "allowed",
	},
	{
		role: "menubar",
		naming: "allowed",
	},
	{
		role: "menuitem",
		naming: "allowed",
	},
	{
		role: "menuitemcheckbox",
		naming: "allowed",
	},
	{
		role: "menuitemradio",
		naming: "allowed",
	},
	{
		role: "navigation",
		naming: "allowed",
	},
	{
		role: "none",
		naming: "allowed",
	},
	{
		role: "note",
		naming: "allowed",
	},
	{
		role: "option",
		naming: "allowed",
	},
	{
		role: "paragraph",
		naming: "prohibited",
	},
	{
		role: "presentation",
		naming: "prohibited",
	},
	{
		role: "progressbar",
		naming: "allowed",
	},
	{
		role: "radio",
		naming: "allowed",
	},
	{
		role: "radiogroup",
		naming: "allowed",
	},
	{
		role: "range",
		naming: "allowed",
	},
	{
		role: "region",
		naming: "allowed",
	},
	{
		role: "roletype",
		naming: "allowed",
	},
	{
		role: "row",
		naming: "allowed",
	},
	{
		role: "rowgroup",
		naming: "allowed",
	},
	{
		role: "rowheader",
		naming: "allowed",
	},
	{
		role: "scrollbar",
		naming: "allowed",
	},
	{
		role: "search",
		naming: "allowed",
	},
	{
		role: "searchbox",
		naming: "allowed",
	},
	{
		role: "section",
		naming: "allowed",
	},
	{
		role: "sectionhead",
		naming: "allowed",
	},
	{
		role: "select",
		naming: "allowed",
	},
	{
		role: "separator",
		naming: "allowed",
	},
	{
		role: "slider",
		naming: "allowed",
	},
	{
		role: "spinbutton",
		naming: "allowed",
	},
	{
		role: "status",
		naming: "allowed",
	},
	{
		role: "strong",
		naming: "prohibited",
	},
	{
		role: "structure",
		naming: "allowed",
	},
	{
		role: "subscript",
		naming: "prohibited",
	},
	{
		role: "superscript",
		naming: "prohibited",
	},
	{
		role: "switch",
		naming: "allowed",
	},
	{
		role: "tab",
		naming: "allowed",
	},
	{
		role: "table",
		naming: "allowed",
	},
	{
		role: "tablist",
		naming: "allowed",
	},
	{
		role: "tabpanel",
		naming: "allowed",
	},
	{
		role: "term",
		naming: "allowed",
	},
	{
		role: "textbox",
		naming: "allowed",
	},
	{
		role: "time",
		naming: "allowed",
	},
	{
		role: "timer",
		naming: "allowed",
	},
	{
		role: "toolbar",
		naming: "allowed",
	},
	{
		role: "tooltip",
		naming: "allowed",
	},
	{
		role: "tree",
		naming: "allowed",
	},
	{
		role: "treegrid",
		naming: "allowed",
	},
	{
		role: "treeitem",
		naming: "allowed",
	},
	{
		role: "widget",
		naming: "allowed",
	},
	{
		role: "window",
		naming: "allowed",
	},
];

module.exports = data;
