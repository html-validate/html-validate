// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfigLoader smoketest test-files/config/directive/disable.html 1`] = `
Object {
  "extends": Array [
    "htmlvalidate:recommended",
  ],
  "plugins": Array [],
  "rules": Object {
    "attr-case": "error",
    "attr-quotes": "error",
    "attribute-allowed-values": "error",
    "attribute-boolean-style": "error",
    "close-attr": "error",
    "close-order": "error",
    "deprecated": "error",
    "element-case": "error",
    "element-name": "error",
    "element-permitted-content": "off",
    "element-permitted-occurrences": "error",
    "element-permitted-order": "error",
    "element-required-attributes": "error",
    "empty-heading": "error",
    "no-conditional-comment": "error",
    "no-deprecated-attr": "error",
    "no-dup-attr": "error",
    "no-dup-class": "error",
    "no-dup-id": "error",
    "no-implicit-close": "error",
    "no-inline-style": "error",
    "no-trailing-whitespace": "error",
    "prefer-button": "error",
    "void": "error",
    "wcag/h32": "error",
    "wcag/h37": "error",
    "wcag/h67": "error",
  },
  "transform": Object {},
}
`;

exports[`ConfigLoader smoketest test-files/config/directive/disable.html 2`] = `
Array [
  Object {
    "errorCount": 2,
    "filePath": "test-files/config/directive/disable.html",
    "messages": Array [
      Object {
        "column": 3,
        "context": undefined,
        "line": 1,
        "message": "End tag for <i> must not be omitted",
        "offset": 2,
        "ruleId": "void",
        "severity": 2,
        "size": 2,
      },
      Object {
        "column": 3,
        "context": undefined,
        "line": 8,
        "message": "End tag for <i> must not be omitted",
        "offset": 190,
        "ruleId": "void",
        "severity": 2,
        "size": 2,
      },
    ],
    "source": "<i/>Before disable, should trigger

<!-- [html-validate-disable void] -->
<i/>After disable, should not trigger
<i/>After disable, should not trigger

<!-- [html-validate-enable void] -->
<i/>Before after, should trigger
",
    "warningCount": 0,
  },
]
`;

exports[`ConfigLoader smoketest test-files/config/directive/disable-block.html 1`] = `
Object {
  "extends": Array [
    "htmlvalidate:recommended",
  ],
  "plugins": Array [],
  "rules": Object {
    "attr-case": "error",
    "attr-quotes": "error",
    "attribute-allowed-values": "error",
    "attribute-boolean-style": "error",
    "close-attr": "error",
    "close-order": "error",
    "deprecated": "error",
    "element-case": "error",
    "element-name": "error",
    "element-permitted-content": "off",
    "element-permitted-occurrences": "error",
    "element-permitted-order": "error",
    "element-required-attributes": "error",
    "empty-heading": "error",
    "no-conditional-comment": "error",
    "no-deprecated-attr": "error",
    "no-dup-attr": "error",
    "no-dup-class": "error",
    "no-dup-id": "error",
    "no-implicit-close": "error",
    "no-inline-style": "error",
    "no-trailing-whitespace": "error",
    "prefer-button": "error",
    "void": "error",
    "wcag/h32": "error",
    "wcag/h37": "error",
    "wcag/h67": "error",
  },
  "transform": Object {},
}
`;

exports[`ConfigLoader smoketest test-files/config/directive/disable-block.html 2`] = `
Array [
  Object {
    "errorCount": 4,
    "filePath": "test-files/config/directive/disable-block.html",
    "messages": Array [
      Object {
        "column": 3,
        "context": undefined,
        "line": 1,
        "message": "End tag for <i> must not be omitted",
        "offset": 2,
        "ruleId": "void",
        "severity": 2,
        "size": 2,
      },
      Object {
        "column": 4,
        "context": undefined,
        "line": 3,
        "message": "End tag for <i> must not be omitted",
        "offset": 43,
        "ruleId": "void",
        "severity": 2,
        "size": 2,
      },
      Object {
        "column": 3,
        "context": undefined,
        "line": 11,
        "message": "End tag for <i> must not be omitted",
        "offset": 324,
        "ruleId": "void",
        "severity": 2,
        "size": 2,
      },
      Object {
        "column": 3,
        "context": undefined,
        "line": 16,
        "message": "End tag for <i> must not be omitted",
        "offset": 417,
        "ruleId": "void",
        "severity": 2,
        "size": 2,
      },
    ],
    "source": "<i/>Outside block, should trigger
<div>
	<i/>Inside block, before directive, should trigger
	<!-- [html-validate-disable-block void] -->
	<i/>Inside block, after directive, shout not trigger
	<div>
		<i/>Inside block, after directive, shout not trigger
	</div>
	<i/>Inside block, after directive, shout not trigger
</div>
<i/>Outside block, should trigger

<div>
	<!-- [html-validate-disable-block void] -->
</div>
<i/>Outside block, should trigger

<!-- [html-validate-disable-block void] -->
Should handle when root element is parent but no children
",
    "warningCount": 0,
  },
]
`;

exports[`ConfigLoader smoketest test-files/config/directive/disable-multiple.html 1`] = `
Object {
  "extends": Array [
    "htmlvalidate:recommended",
  ],
  "plugins": Array [],
  "rules": Object {
    "attr-case": "error",
    "attr-quotes": "error",
    "attribute-allowed-values": "error",
    "attribute-boolean-style": "error",
    "close-attr": "error",
    "close-order": "error",
    "deprecated": "error",
    "element-case": "error",
    "element-name": "error",
    "element-permitted-content": "off",
    "element-permitted-occurrences": "error",
    "element-permitted-order": "error",
    "element-required-attributes": "error",
    "empty-heading": "error",
    "no-conditional-comment": "error",
    "no-deprecated-attr": "error",
    "no-dup-attr": "error",
    "no-dup-class": "error",
    "no-dup-id": "error",
    "no-implicit-close": "error",
    "no-inline-style": "error",
    "no-trailing-whitespace": "error",
    "prefer-button": "error",
    "void": "error",
    "wcag/h32": "error",
    "wcag/h37": "error",
    "wcag/h67": "error",
  },
  "transform": Object {},
}
`;

exports[`ConfigLoader smoketest test-files/config/directive/disable-multiple.html 2`] = `
Array [
  Object {
    "errorCount": 2,
    "filePath": "test-files/config/directive/disable-multiple.html",
    "messages": Array [
      Object {
        "column": 2,
        "context": undefined,
        "line": 1,
        "message": "<blink> is deprecated",
        "offset": 1,
        "ruleId": "deprecated",
        "severity": 2,
        "size": 5,
      },
      Object {
        "column": 7,
        "context": undefined,
        "line": 1,
        "message": "End tag for <blink> must not be omitted",
        "offset": 6,
        "ruleId": "void",
        "severity": 2,
        "size": 2,
      },
    ],
    "source": "<blink/>
<div>
	<!-- [html-validate-disable-block void, deprecated] -->
	<blink/>
</div>
",
    "warningCount": 0,
  },
]
`;

exports[`ConfigLoader smoketest test-files/config/directive/disable-next.html 1`] = `
Object {
  "extends": Array [
    "htmlvalidate:recommended",
  ],
  "plugins": Array [],
  "rules": Object {
    "attr-case": "error",
    "attr-quotes": "error",
    "attribute-allowed-values": "error",
    "attribute-boolean-style": "error",
    "close-attr": "error",
    "close-order": "error",
    "deprecated": "error",
    "element-case": "error",
    "element-name": "error",
    "element-permitted-content": "off",
    "element-permitted-occurrences": "error",
    "element-permitted-order": "error",
    "element-required-attributes": "error",
    "empty-heading": "error",
    "no-conditional-comment": "error",
    "no-deprecated-attr": "error",
    "no-dup-attr": "error",
    "no-dup-class": "error",
    "no-dup-id": "error",
    "no-implicit-close": "error",
    "no-inline-style": "error",
    "no-trailing-whitespace": "error",
    "prefer-button": "error",
    "void": "error",
    "wcag/h32": "error",
    "wcag/h37": "error",
    "wcag/h67": "error",
  },
  "transform": Object {},
}
`;

exports[`ConfigLoader smoketest test-files/config/directive/disable-next.html 2`] = `
Array [
  Object {
    "errorCount": 2,
    "filePath": "test-files/config/directive/disable-next.html",
    "messages": Array [
      Object {
        "column": 3,
        "context": undefined,
        "line": 1,
        "message": "End tag for <i> must not be omitted",
        "offset": 2,
        "ruleId": "void",
        "severity": 2,
        "size": 2,
      },
      Object {
        "column": 3,
        "context": undefined,
        "line": 5,
        "message": "End tag for <i> must not be omitted",
        "offset": 125,
        "ruleId": "void",
        "severity": 2,
        "size": 2,
      },
    ],
    "source": "<i/>Before disable, should trigger

<!-- [html-validate-disable-next void] -->
<i/>First after disable, should not trigger
<i/>Second after disable, should trigger
",
    "warningCount": 0,
  },
]
`;

exports[`ConfigLoader smoketest test-files/config/elements/file.html 1`] = `
Object {
  "elements": Array [
    "html5",
    "<rootDir>/test-files/config/elements/elements.json",
  ],
  "extends": Array [
    "htmlvalidate:recommended",
  ],
  "plugins": Array [],
  "rules": Object {
    "attr-case": "error",
    "attr-quotes": "error",
    "attribute-allowed-values": "error",
    "attribute-boolean-style": "error",
    "close-attr": "error",
    "close-order": "error",
    "deprecated": "error",
    "element-case": "error",
    "element-name": "error",
    "element-permitted-content": "error",
    "element-permitted-occurrences": "error",
    "element-permitted-order": "error",
    "element-required-attributes": "error",
    "empty-heading": "error",
    "no-conditional-comment": "error",
    "no-deprecated-attr": "error",
    "no-dup-attr": "error",
    "no-dup-class": "error",
    "no-dup-id": "error",
    "no-implicit-close": "error",
    "no-inline-style": "error",
    "no-trailing-whitespace": "error",
    "prefer-button": "error",
    "void": "error",
    "wcag/h32": "error",
    "wcag/h37": "error",
    "wcag/h67": "error",
  },
  "transform": Object {},
}
`;

exports[`ConfigLoader smoketest test-files/config/elements/file.html 2`] = `
Array [
  Object {
    "errorCount": 2,
    "filePath": "test-files/config/elements/file.html",
    "messages": Array [
      Object {
        "column": 3,
        "context": undefined,
        "line": 2,
        "message": "<deprecated> is deprecated",
        "offset": 8,
        "ruleId": "deprecated",
        "severity": 2,
        "size": 10,
      },
      Object {
        "column": 4,
        "context": undefined,
        "line": 5,
        "message": "Element <li> is not permitted as content in <ul>",
        "offset": 67,
        "ruleId": "element-permitted-content",
        "severity": 2,
        "size": 2,
      },
    ],
    "source": "<div>
	<deprecated>new (deprecated) element</deprecated>

	<ul>
		<li>overridden so it is disallowed</li>
		<p>overridden so it is allowed</p>
	</ul>
</div>
",
    "warningCount": 0,
  },
]
`;

exports[`ConfigLoader smoketest test-files/config/file.html 1`] = `
Object {
  "extends": Array [
    "htmlvalidate:recommended",
  ],
  "plugins": Array [],
  "rules": Object {
    "attr-case": "error",
    "attr-quotes": "error",
    "attribute-allowed-values": "error",
    "attribute-boolean-style": "error",
    "close-attr": "error",
    "close-order": "error",
    "deprecated": "error",
    "element-case": "error",
    "element-name": "error",
    "element-permitted-content": "error",
    "element-permitted-occurrences": "error",
    "element-permitted-order": "error",
    "element-required-attributes": "error",
    "empty-heading": "error",
    "no-conditional-comment": "error",
    "no-deprecated-attr": "error",
    "no-dup-attr": "error",
    "no-dup-class": "error",
    "no-dup-id": "error",
    "no-implicit-close": "error",
    "no-inline-style": "error",
    "no-trailing-whitespace": "error",
    "prefer-button": "error",
    "void": "error",
    "wcag/h32": "error",
    "wcag/h37": "error",
    "wcag/h67": "error",
  },
  "transform": Object {},
}
`;

exports[`ConfigLoader smoketest test-files/config/file.html 2`] = `
Array [
  Object {
    "errorCount": 1,
    "filePath": "test-files/config/file.html",
    "messages": Array [
      Object {
        "column": 9,
        "context": undefined,
        "line": 2,
        "message": "End tag for <br> must be omitted",
        "offset": 52,
        "ruleId": "void",
        "severity": 2,
        "size": 1,
      },
    ],
    "source": "<!-- default configuration yields error -->
<br></br>
",
    "warningCount": 0,
  },
]
`;

exports[`ConfigLoader smoketest test-files/config/off/error/file.html 1`] = `
Object {
  "extends": Array [
    "htmlvalidate:recommended",
  ],
  "plugins": Array [],
  "rules": Object {
    "attr-case": "error",
    "attr-quotes": "error",
    "attribute-allowed-values": "error",
    "attribute-boolean-style": "error",
    "close-attr": "error",
    "close-order": "error",
    "deprecated": "error",
    "element-case": "error",
    "element-name": "error",
    "element-permitted-content": "error",
    "element-permitted-occurrences": "error",
    "element-permitted-order": "error",
    "element-required-attributes": "error",
    "empty-heading": "error",
    "no-conditional-comment": "error",
    "no-deprecated-attr": "error",
    "no-dup-attr": "error",
    "no-dup-class": "error",
    "no-dup-id": "error",
    "no-implicit-close": "error",
    "no-inline-style": "error",
    "no-trailing-whitespace": "error",
    "prefer-button": "error",
    "void": "error",
    "wcag/h32": "error",
    "wcag/h37": "error",
    "wcag/h67": "error",
  },
  "transform": Object {},
}
`;

exports[`ConfigLoader smoketest test-files/config/off/error/file.html 2`] = `
Array [
  Object {
    "errorCount": 1,
    "filePath": "test-files/config/off/error/file.html",
    "messages": Array [
      Object {
        "column": 9,
        "context": undefined,
        "line": 2,
        "message": "End tag for <br> must be omitted",
        "offset": 45,
        "ruleId": "void",
        "severity": 2,
        "size": 1,
      },
    ],
    "source": "<!-- reconfigured to yield error -->
<br></br>
",
    "warningCount": 0,
  },
]
`;

exports[`ConfigLoader smoketest test-files/config/off/file.html 1`] = `
Object {
  "extends": Array [
    "htmlvalidate:recommended",
  ],
  "plugins": Array [],
  "rules": Object {
    "attr-case": "error",
    "attr-quotes": "error",
    "attribute-allowed-values": "error",
    "attribute-boolean-style": "error",
    "close-attr": "error",
    "close-order": "error",
    "deprecated": "error",
    "element-case": "error",
    "element-name": "error",
    "element-permitted-content": "error",
    "element-permitted-occurrences": "error",
    "element-permitted-order": "error",
    "element-required-attributes": "error",
    "empty-heading": "error",
    "no-conditional-comment": "error",
    "no-deprecated-attr": "error",
    "no-dup-attr": "error",
    "no-dup-class": "error",
    "no-dup-id": "error",
    "no-implicit-close": "error",
    "no-inline-style": "error",
    "no-trailing-whitespace": "error",
    "prefer-button": "error",
    "void": "off",
    "wcag/h32": "error",
    "wcag/h37": "error",
    "wcag/h67": "error",
  },
  "transform": Object {},
}
`;

exports[`ConfigLoader smoketest test-files/config/off/file.html 2`] = `Array []`;

exports[`ConfigLoader smoketest test-files/config/warn/file.html 1`] = `
Object {
  "extends": Array [
    "htmlvalidate:recommended",
  ],
  "plugins": Array [],
  "rules": Object {
    "attr-case": "error",
    "attr-quotes": "error",
    "attribute-allowed-values": "error",
    "attribute-boolean-style": "error",
    "close-attr": "error",
    "close-order": "error",
    "deprecated": "error",
    "element-case": "error",
    "element-name": "error",
    "element-permitted-content": "error",
    "element-permitted-occurrences": "error",
    "element-permitted-order": "error",
    "element-required-attributes": "error",
    "empty-heading": "error",
    "no-conditional-comment": "error",
    "no-deprecated-attr": "error",
    "no-dup-attr": "error",
    "no-dup-class": "error",
    "no-dup-id": "error",
    "no-implicit-close": "error",
    "no-inline-style": "error",
    "no-trailing-whitespace": "error",
    "prefer-button": "error",
    "void": "warn",
    "wcag/h32": "error",
    "wcag/h37": "error",
    "wcag/h67": "error",
  },
  "transform": Object {},
}
`;

exports[`ConfigLoader smoketest test-files/config/warn/file.html 2`] = `
Array [
  Object {
    "errorCount": 0,
    "filePath": "test-files/config/warn/file.html",
    "messages": Array [
      Object {
        "column": 9,
        "context": undefined,
        "line": 2,
        "message": "End tag for <br> must be omitted",
        "offset": 47,
        "ruleId": "void",
        "severity": 1,
        "size": 1,
      },
    ],
    "source": "<!-- configured to yield a warning -->
<br></br>
",
    "warningCount": 1,
  },
]
`;
