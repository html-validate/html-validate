// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should dump events for given filename 1`] = `
"parse:begin: {
  "location": null
}
dom:load: {
  "source": {
    "data": "[truncated]",
    "filename": "<rootDir>/test-files/parser/simple.html",
    "line": 1,
    "column": 1,
    "offset": 0,
    "originalData": "[truncated]"
  },
  "location": null
}
tag:start: {
  "target": {
    "nodeName": "p",
    "childNodes": "[truncated]",
    "location": "<rootDir>/test-files/parser/simple.html:1:2",
    "tagName": "p",
    "attr": {
      "id": [
        {
          "key": "id",
          "value": "foo",
          "keyLocation": "<rootDir>/test-files/parser/simple.html:1:4",
          "valueLocation": "<rootDir>/test-files/parser/simple.html:1:8"
        }
      ]
    },
    "metaElement": "[truncated]"
  },
  "location": "<rootDir>/test-files/parser/simple.html:1:1"
}
attr: {
  "target": {
    "nodeName": "p",
    "childNodes": "[truncated]",
    "location": "<rootDir>/test-files/parser/simple.html:1:2",
    "tagName": "p",
    "attr": {
      "id": [
        {
          "key": "id",
          "value": "foo",
          "keyLocation": "<rootDir>/test-files/parser/simple.html:1:4",
          "valueLocation": "<rootDir>/test-files/parser/simple.html:1:8"
        }
      ]
    },
    "metaElement": "[truncated]"
  },
  "key": "id",
  "value": "foo",
  "quote": "\\"",
  "location": "<rootDir>/test-files/parser/simple.html:1:4",
  "keyLocation": "<rootDir>/test-files/parser/simple.html:1:4",
  "valueLocation": "<rootDir>/test-files/parser/simple.html:1:8",
  "meta": "[truncated]"
}
tag:ready: {
  "target": {
    "nodeName": "p",
    "childNodes": "[truncated]",
    "location": "<rootDir>/test-files/parser/simple.html:1:2",
    "tagName": "p",
    "attr": {
      "id": [
        {
          "key": "id",
          "value": "foo",
          "keyLocation": "<rootDir>/test-files/parser/simple.html:1:4",
          "valueLocation": "<rootDir>/test-files/parser/simple.html:1:8"
        }
      ]
    },
    "metaElement": "[truncated]"
  },
  "location": "<rootDir>/test-files/parser/simple.html:1:12"
}
tag:end: {
  "target": {
    "nodeName": "p",
    "childNodes": "[truncated]",
    "location": "<rootDir>/test-files/parser/simple.html:1:25",
    "tagName": "p",
    "attr": {},
    "metaElement": "[truncated]"
  },
  "previous": {
    "nodeName": "p",
    "childNodes": "[truncated]",
    "location": "<rootDir>/test-files/parser/simple.html:1:2",
    "tagName": "p",
    "attr": {
      "id": [
        {
          "key": "id",
          "value": "foo",
          "keyLocation": "<rootDir>/test-files/parser/simple.html:1:4",
          "valueLocation": "<rootDir>/test-files/parser/simple.html:1:8"
        }
      ]
    },
    "metaElement": "[truncated]"
  },
  "location": "<rootDir>/test-files/parser/simple.html:1:27"
}
element:ready: {
  "target": {
    "nodeName": "p",
    "childNodes": "[truncated]",
    "location": "<rootDir>/test-files/parser/simple.html:1:2",
    "tagName": "p",
    "attr": {
      "id": [
        {
          "key": "id",
          "value": "foo",
          "keyLocation": "<rootDir>/test-files/parser/simple.html:1:4",
          "valueLocation": "<rootDir>/test-files/parser/simple.html:1:8"
        }
      ]
    },
    "metaElement": "[truncated]"
  },
  "location": "<rootDir>/test-files/parser/simple.html:1:2"
}
whitespace: {
  "text": "\\n",
  "location": "<rootDir>/test-files/parser/simple.html:1:28"
}
dom:ready: {
  "document": {
    "root": {
      "nodeName": "#document",
      "childNodes": "[truncated]",
      "location": "<rootDir>/test-files/parser/simple.html:1:1",
      "tagName": "#document",
      "attr": {},
      "metaElement": null
    },
    "active": {
      "nodeName": "#document",
      "childNodes": "[truncated]",
      "location": "<rootDir>/test-files/parser/simple.html:1:1",
      "tagName": "#document",
      "attr": {},
      "metaElement": null
    },
    "doctype": null
  },
  "source": {
    "data": "[truncated]",
    "filename": "<rootDir>/test-files/parser/simple.html",
    "line": 1,
    "column": 1,
    "offset": 0,
    "originalData": "[truncated]"
  },
  "location": null
}
parse:end: {
  "location": null
}
"
`;
